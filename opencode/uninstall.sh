#!/usr/bin/env bash
# Uninstallation script generated by Gemini based on the installation script
# https://github.com/opencode-ai/opencode/blob/23763fbc4905e736eedf03176611864397e010e9/install (2025-06-12)

# npm uninstall -g opencode-ai
# # echo "Uncomment the contents of this script at your own risk"
#
# # set -euo pipefail
# #
# # APP=opencode
# # INSTALL_DIR="$HOME/.opencode/bin"
# #
# # RED='\033[0;31m'
# # GREEN='\033[0;32m'
# # YELLOW='\033[1;33m'
# # ORANGE='\033[38;2;255;140;0m'
# # NC='\033[0m' # No Color
# #
# # print_message() {
# #     local level=$1
# #     local message=$2
# #     local color=""
# #
# #     case $level in
# #         info) color="${GREEN}" ;;
# #         warning) color="${YELLOW}" ;;
# #         error) color="${RED}" ;;
# #     esac
# #
# #     echo -e "${color}${message}${NC}"
# # }
# #
# # echo -e "${ORANGE}Starting uninstallation of ${APP}...${NC}"
# #
# # # 1. Remove the opencode executable
# # if command -v "$APP" >/dev/null 2>&1; then
# #     opencode_path=$(which "$APP")
# #     if [[ "$opencode_path" == "$INSTALL_DIR/$APP" ]]; then
# #         print_message info "Removing ${APP} executable from ${ORANGE}$INSTALL_DIR/${NC}"
# #         rm -f "$INSTALL_DIR/$APP"
# #     else
# #         print_message warning "${APP} found at ${YELLOW}$opencode_path${NC}, which is not the expected installation directory. Please remove it manually if necessary."
# #     fi
# # else
# #     print_message info "${APP} executable not found in PATH."
# # fi
# #
# # # 2. Remove the installation directory if empty
# # if [[ -d "$INSTALL_DIR" ]]; then
# #     if [[ -z "$(ls -A "$INSTALL_DIR")" ]]; then
# #         print_message info "Removing empty installation directory: ${ORANGE}$INSTALL_DIR${NC}"
# #         rmdir "$INSTALL_DIR" || print_message warning "Could not remove empty directory $INSTALL_DIR"
# #         rmdir "$HOME/.opencode" || true # Try to remove parent directory if also empty
# #     else
# #         print_message warning "Installation directory ${YELLOW}$INSTALL_DIR${NC} is not empty. Leaving it as is."
# #     fi
# # else
# #     print_message info "Installation directory ${ORANGE}$INSTALL_DIR${NC} does not exist."
# # fi
# #
# # # 3. Remove PATH modifications from shell config files
# # print_message info "Attempting to remove PATH modifications from shell configuration files..."
# #
# # XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-$HOME/.config}
# # current_shell=$(basename "$SHELL")
# #
# # config_files=""
# # case $current_shell in
# #     fish)
# #         config_files="$HOME/.config/fish/config.fish"
# #     ;;
# #     zsh)
# #         config_files="$HOME/.zshrc $HOME/.zshenv $XDG_CONFIG_HOME/zsh/.zshrc $XDG_CONFIG_HOME/zsh/.zshenv"
# #     ;;
# #     bash)
# #         config_files="$HOME/.bashrc $HOME/.bash_profile $HOME/.profile $XDG_CONFIG_HOME/bash/.bashrc $XDG_CONFIG_HOME/bash/.bash_profile"
# #     ;;
# #     ash)
# #         config_files="$HOME/.ashrc $HOME/.profile /etc/profile"
# #     ;;
# #     sh)
# #         config_files="$HOME/.ashrc $HOME/.profile /etc/profile"
# #     ;;
# #     *)
# #         # Default case if none of the above matches
# #         config_files="$HOME/.bashrc $HOME/.bash_profile $XDG_CONFIG_HOME/bash/.bashrc $XDG_CONFIG_HOME/bash/.bash_profile"
# #     ;;
# # esac
# #
# # removed_from_any_file=false
# # for file in $config_files; do
# #     if [[ -f "$file" ]]; then
# #         if grep -q "opencode" "$file"; then
# #             print_message info "Cleaning up ${YELLOW}$file${NC}..."
# #             # Remove the specific lines added by install.sh
# #             # The -i.bak creates a backup. You can remove .bak if you don't want backups.
# #             sed -i.bak '/# opencode/,/export PATH=$INSTALL_DIR:$PATH/d' "$file" \
# #             || sed -i.bak '/# opencode/,/fish_add_path \$INSTALL_DIR/d' "$file" \
# #             || print_message warning "Failed to automatically remove 'opencode' entries from ${YELLOW}$file.${NC} Please check it manually."
# #
# #             # Remove any trailing blank lines that might have been created by sed
# #             sed -i.bak -e :a -e '/^\n*$/{$d;N;};/\n$/ba' "$file"
# #
# #             print_message info "Cleaned up ${YELLOW}$file${NC}"
# #             removed_from_any_file=true
# #         fi
# #     fi
# # done
# #
# # if ! $removed_from_any_file; then
# #     print_message info "No 'opencode' PATH modifications found in common configuration files."
# # fi
# #
# # echo -e "${ORANGE}Uninstallation complete.${NC}"
# # print_message info "You may need to restart your shell or run ${YELLOW}source ~/.<your_shell>rc${NC} to ensure changes take effect."
# # echo ""
