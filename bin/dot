#!/bin/zsh
#
# dot
#
# `dot` handles installation, updates, things like that. Run it periodically
# to make sure you're on the latest and greatest.

set -e

# get the absolute path of the symlinked ~/.zshrc file
zshrc_path=$(readlink -f ~/.zshrc)

# dotfiles path should be the grandparent directory of the symlink target zshrc
dotfiles_path=$(dirname $(dirname "$zshrc_path"))

if [ "$dotfiles_path" != "$DOTFILES" ]; then
	echo "\$DOTFILES environment variable does not have the expected value:"
	echo "  expected '$dotfiles_path'"
	echo "  got      '$DOTFILES'"
	exit 1
fi

displayUsageAndExit() {
	echo "dot -- dotfiles management"
	echo ""
	echo "Usage: dot <option>"
	echo ""
	echo "Options:"
	echo "  e, -e, --edit        Open dotfiles directory for editing"
	echo "  h, -h, --help        Show this help message and exit"
	echo "  i, -i, --install     Run dotfiles installation scripts"
	exit
}

[ $# -gt 0 ] || displayUsageAndExit

while [ $# -gt 0 ]; do
	case "$1" in
		"h"|"-h"|"--help")
			displayUsageAndExit
			;;

		"e"|"-e"|"--edit")
			exec "$EDITOR" "$dotfilesDirectory"
			exit
			;;

		"i"|"-i"|"--install")

			if [ ! -d "$DOTFILES" ]; then 
				echo "\$DOTFILES environment variable is not a directory ($DOTFILES)"
				exit 1
			fi
			if [ ! -f "$DOTFILES/scripts/install"]; then 
				echo "\$DOTFILES/scripts/install does not exist"
				exit 1
			fi

			# Update apt repositories
			echo "› apt update"
			apt update

			# Run install scripts for all dotfiles dirctories
			echo "› $DOTFILES/scripts/install"
			$DOTFILES/scripts/install

			exit
			;;

		*)
			echo "Invalid option: $1"
			displayUsageAndExit
			;;
	esac
	shift
done

